'''
순간이동(현재까지 온 거리의 2배씩 이동)을 할 때에는 배터리가 소모되지 않으므로, 2로 나누었을 때 나머지가 점프해야 할 거리가 될 것
몫이 0이 될 때까지 반복하고, 마지막에 나머지를 모두 더하면 된다.

#[Example] 5023
단계 |   몫   |   나머지
1.     2511        1
2.     1255        1
3.      627        1
4.      313        1
5.      156        1
6.       78        0
7.       39        0
8.       19        1
9.        9        1
10.       4        1
11.       2        0
12.       1        0
13.       0        1

나머지를 모두 더하면 9
따라서, 최소 9번의 점프만 사용하면 된다.
'''

'''
[기막힌 풀이]
- 2배씩 커지는 원리에다가 나머지 숫자가 점프해야 할 개수였으므로, 사실상 주어진 숫자를 이진수로 변경하여 1의 개수를 카운트하는 것과 같음
[Example] 6 -> 0110   : 따라서, 2번 점프
'''

def solution(n):
    answer = 0
    
    while n != 0:
        if n % 2 != 0:
            answer += 1
        n //= 2
    
    return answer